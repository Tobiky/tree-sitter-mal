=================
Empty Attack-step
=================

category Test {
    asset TestAsset {
        | orStep
        & andStep
        # defenseStep
        E existenceStep
        !E nonExistenceStep
    }
}

-----------------

(source_file
  (declaration
    (category_declaration
      id: (identity)
      assets: (asset
        id: (identity)
        body: (attack_step
          id: (identity))
        body: (attack_step
          id: (identity))
        body: (attack_step
          id: (identity))
        body: (attack_step
          id: (identity))
        body: (attack_step
          id: (identity))))))

====================
Attack-step with Tag
====================

category Test {
    asset TestAsset {
        | step @ Tag
    }
}

--------------------

(source_file
  (declaration
    (category_declaration
      id: (identity)
      assets: (asset
        id: (identity)
        body: (attack_step
          id: (identity)
          tag: (identity))))))

=====================
Attack-step with CIAs
=====================

category Test {
    asset TestAsset {
        | oneC {C}
        | oneI {I}
        | oneA {A}
        | multipleCIA {C, I}
        | multipleCIASurroundingSpace { C, I }
    }
}

---------------------

(source_file
  (declaration
    (category_declaration
      id: (identity)
      assets: (asset
        id: (identity)
        body: (attack_step
          id: (identity)
          cias: (cia))
        body: (attack_step
          id: (identity)
          cias: (cia))
        body: (attack_step
          id: (identity)
          cias: (cia))
        body: (attack_step
          id: (identity)
          cias: (cia)
          cias: (cia))
        body: (attack_step
          id: (identity)
          cias: (cia)
          cias: (cia))))))

====================
Attack-step with TTC
====================

category Test {
    asset TestAsset {
        | step [ 1 ]
        | addStep [ 1 + 1 ]
        | subStep [ 1 - 1 ]
        | mulStep [ 1 * 1 ]
        | divStep [ 1 / 1 ]
        | pwrStep [ 1 ^ 1 ]
        | factorsOverTerms [ 1 + 1 * 1 ]
        | powersOverFactors [ 1 * 1 ^ 1 ]
        | parenthOverPowers [ (1 * 1) ^ 1 ]
        | distID [ testId ]
        | distNum [ testId (1) ]
        | distNums [ testId (1, 2) ]
    }
}

--------------------

(source_file
  (declaration
    (category_declaration
      id: (identity)
      assets: (asset
        id: (identity)
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (integer)))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (ttc_binop
                left: (integer)
                right: (integer)))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (integer)
              right: (ttc_binop
                left: (integer)
                right: (integer)))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_binop
              left: (ttc_binop
                left: (integer)
                right: (integer))
              right: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (identity)))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_distribution
              id: (identity)
              values: (integer))))
        body: (attack_step
          id: (identity)
          ttc: (ttc
            (ttc_distribution
              id: (identity)
              values: (integer)
              values: (integer))))))))

=====================
Attack-step with Meta
=====================

category Test {
    asset TestAsset {
        | step1
            newLine info: "Meta on new line"
            secondLine info: "Second meta"
        | step2 sameLine info: "Meta on same line"
    }
}

---------------------

(source_file
  (declaration
    (category_declaration
      id: (identity)
      assets: (asset
        id: (identity)
        body: (attack_step
          id: (identity)
          meta: (meta
            id: (identity)
            info: (string))
          meta: (meta
            id: (identity)
            info: (string)))
        body: (attack_step
          id: (identity)
          meta: (meta
            id: (identity)
            info: (string)))))))

=========================
Attack-step with Reaching
=========================

category Test {
    asset TestAsset {
        | inherits
            +> a
        | inheritsMult
            +> a, b
        | leadsTo
            -> a
        | leadsToMult
            -> a, b
    }
}

-------------------------

(source_file
  (declaration
    (category_declaration
      id: (identity)
      assets: (asset
        id: (identity)
        body: (attack_step
          id: (identity)
          reaches: (reaching
            reaches: (identity)))
        body: (attack_step
          id: (identity)
          reaches: (reaching
            reaches: (identity)
            reaches: (identity)))
        body: (attack_step
          id: (identity)
          reaches: (reaching
            reaches: (identity)))
        body: (attack_step
          id: (identity)
          reaches: (reaching
            reaches: (identity)
            reaches: (identity)))))))
